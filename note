#include "/home/aldon/Downloads/polos2/main.cpp"

void siap_angkat_korban()
{
    trj_lurus(kR1, 80, 15, -60, 80, 15, -60);
    trj_lurus(kR2, 80, -40, -60, 80, -40, -60);
    trj_lurus(kR3, 80, -15, -60, 80, -15, -60);

    trj_lurus(kL1, 80, -15, -60, 80, -15, -60);
    trj_lurus(kL2, 80, 40, -60, 80, 40, -60);
    trj_lurus(kL3, 80, 15, -60, 80, 15, -60);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 12000);
    // trj_start(xx, xx, R3, xx, xx, xx,  ultra_fast, 25000);
}
void siap_tangga()
{
    trj_lurus(kR1, 80, 0, -100, 80, 0, -100);
    trj_lurus(kR2, 80, 0, -100, 80, 0, -100);
    trj_lurus(kR3, 100, 0, -80, 100, 0, -80);

    trj_lurus(kL1, 70, 0, -60, 70, 0, -50);
    trj_lurus(kL2, 70, 0, -60, 70, 0, -50);
    trj_lurus(kL3, 60, 0, -60, 60, 0, -50);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 10000);
}
void coba_putar_kananv2()
{
    // kanan
    trj_langkah(kL1, L1_x, L1_y, L1_z, 80, -15, -40);
    trj_langkah(kL3, L3_x, L3_y, L3_z, 80, -15, -40);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 80, -15, -40);

    trj_lurus(kR1, R1_x, R1_y, R1_z, 80, 0, -80); // 90
    trj_lurus(kR3, R3_x, R3_y, R3_z, 80, 0, -80); // 90
    trj_lurus(kL2, L2_x, L2_y, L2_z, 80, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 15000);

    trj_langkah(kR1, R1_x, R1_y, R1_z, 80, -15, -40);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 80, -15, -40);
    trj_langkah(kL2, L2_x, L2_y, L2_z, 80, -15, -40);

    trj_lurus(kL1, L1_x, L1_y, L1_z, 80, 0, -80); // 95
    trj_lurus(kL3, L3_x, L3_y, L3_z, 80, 0, -80); // 100
    trj_lurus(kR2, R2_x, R2_y, R2_z, 80, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 15000);
}
void putar_kanan_korban()
{
    // kanan
    trj_langkah(kL1, L1_x, L1_y, L1_z, 80, -10, -30);
    trj_langkah(kL3, L3_x, L3_y, L3_z, 80, -10, -30);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 80, -10, -30);

    trj_lurus(kR1, R1_x, R1_y, R1_z, 80, 0, -60); // 60
    trj_lurus(kR3, R3_x, R3_y, R3_z, 80, 0, -60); // 60
    trj_lurus(kL2, L2_x, L2_y, L2_z, 80, 0, -60);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 18000);

    trj_langkah(kR1, R1_x, R1_y, R1_z, 80, -10, -30);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 80, -10, -30);
    trj_langkah(kL2, L2_x, L2_y, L2_z, 80, -10, -30);

    trj_lurus(kL1, L1_x, L1_y, L1_z, 80, 0, -60); // 95
    trj_lurus(kL3, L3_x, L3_y, L3_z, 80, 0, -60); // 100
    trj_lurus(kR2, R2_x, R2_y, R2_z, 80, 0, -60);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 18000);
}
void putar_kanan_korban34()
{
    // kanan
    trj_langkah(kL1, L1_x, L1_y, L1_z, 80, -10, -40);
    trj_langkah(kL3, L3_x, L3_y, L3_z, 80, -10, -40);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 80, -10, -40);

    trj_lurus(kR1, R1_x, R1_y, R1_z, 80, 0, -80); // 80
    trj_lurus(kR3, R3_x, R3_y, R3_z, 80, 0, -80); // 80
    trj_lurus(kL2, L2_x, L2_y, L2_z, 80, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 18000);

    trj_langkah(kR1, R1_x, R1_y, R1_z, 80, -10, -40);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 80, -10, -40);
    trj_langkah(kL2, L2_x, L2_y, L2_z, 80, -10, -40);

    trj_lurus(kL1, L1_x, L1_y, L1_z, 80, 0, -80); // 95
    trj_lurus(kL3, L3_x, L3_y, L3_z, 80, 0, -80); // 100
    trj_lurus(kR2, R2_x, R2_y, R2_z, 80, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 18000);
}
void coba_putar_kananv3()
{
    // kanan
    trj_langkah(kL1, L1_x, L1_y, L1_z, 80, -15, -40);
    trj_langkah(kL3, L3_x, L3_y, L3_z, 80, -15, -40);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 80, -15, -40);

    trj_lurus(kR1, R1_x, R1_y, R1_z, 80, 0, -90); // 90
    trj_lurus(kR3, R3_x, R3_y, R3_z, 80, 0, -90); // 90
    trj_lurus(kL2, L2_x, L2_y, L2_z, 80, 0, -90);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 20000);

    trj_langkah(kR1, R1_x, R1_y, R1_z, 80, -15, -40);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 80, -15, -40);
    trj_langkah(kL2, L2_x, L2_y, L2_z, 80, -15, -40);

    trj_lurus(kL1, L1_x, L1_y, L1_z, 80, 0, -90); // 95
    trj_lurus(kL3, L3_x, L3_y, L3_z, 80, 0, -90); // 100
    trj_lurus(kR2, R2_x, R2_y, R2_z, 80, 0, -90);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 20000);
}
void coba_putar_kiriv2()
{
    // kanan
    trj_langkah(kL1, L1_x, L1_y, L1_z, 80, 15, -40);
    trj_langkah(kL3, L3_x, L3_y, L3_z, 80, 15, -40);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 80, 15, -40);

    trj_lurus(kR1, R1_x, R1_y, R1_z, 80, 0, -80); // 90
    trj_lurus(kR3, R3_x, R3_y, R3_z, 80, 0, -80); // 90
    trj_lurus(kL2, L2_x, L2_y, L2_z, 80, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 15000);

    trj_langkah(kR1, R1_x, R1_y, R1_z, 80, 15, -40);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 80, 15, -40);
    trj_langkah(kL2, L2_x, L2_y, L2_z, 80, 15, -40);

    trj_lurus(kL1, L1_x, L1_y, L1_z, 80, 0, -80); // 95
    trj_lurus(kL3, L3_x, L3_y, L3_z, 80, 0, -80); // 100
    trj_lurus(kR2, R2_x, R2_y, R2_z, 80, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 15000);
}
void putar_kiri_korban()
{
    // kanan
    trj_langkah(kL1, L1_x, L1_y, L1_z, 80, 10, -30);
    trj_langkah(kL3, L3_x, L3_y, L3_z, 80, 10, -30);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 80, 10, -30);

    trj_lurus(kR1, R1_x, R1_y, R1_z, 80, 0, -60); // 60
    trj_lurus(kR3, R3_x, R3_y, R3_z, 80, 0, -60); // 60
    trj_lurus(kL2, L2_x, L2_y, L2_z, 80, 0, -60);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 18000);

    trj_langkah(kR1, R1_x, R1_y, R1_z, 80, 10, -30);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 80, 10, -30);
    trj_langkah(kL2, L2_x, L2_y, L2_z, 80, 10, -30);

    trj_lurus(kL1, L1_x, L1_y, L1_z, 80, 0, -60); // 95
    trj_lurus(kL3, L3_x, L3_y, L3_z, 80, 0, -60); // 100
    trj_lurus(kR2, R2_x, R2_y, R2_z, 80, 0, -60);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 18000);
}
void putar_kiri_korban34()
{
    // kanan
    trj_langkah(kL1, L1_x, L1_y, L1_z, 80, 10, -40);
    trj_langkah(kL3, L3_x, L3_y, L3_z, 80, 10, -40);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 80, 10, -40);

    trj_lurus(kR1, R1_x, R1_y, R1_z, 80, 0, -80); // 80
    trj_lurus(kR3, R3_x, R3_y, R3_z, 80, 0, -80); // 80
    trj_lurus(kL2, L2_x, L2_y, L2_z, 80, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 18000);

    trj_langkah(kR1, R1_x, R1_y, R1_z, 80, 10, -40);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 80, 10, -40);
    trj_langkah(kL2, L2_x, L2_y, L2_z, 80, 10, -40);

    trj_lurus(kL1, L1_x, L1_y, L1_z, 80, 0, -80); // 95
    trj_lurus(kL3, L3_x, L3_y, L3_z, 80, 0, -80); // 100
    trj_lurus(kR2, R2_x, R2_y, R2_z, 80, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 18000);
}
void coba_putar_kiriv3()
{
    // kanan
    trj_langkah(kL1, L1_x, L1_y, L1_z, 80, 25, -40);
    trj_langkah(kL3, L3_x, L3_y, L3_z, 80, 25, -40);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 80, 25, -40);

    trj_lurus(kR1, R1_x, R1_y, R1_z, 80, 0, -90); // 90
    trj_lurus(kR3, R3_x, R3_y, R3_z, 80, 0, -90); // 90
    trj_lurus(kL2, L2_x, L2_y, L2_z, 80, 0, -90);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 20000);

    trj_langkah(kR1, R1_x, R1_y, R1_z, 80, 25, -40);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 80, 25, -40);
    trj_langkah(kL2, L2_x, L2_y, L2_z, 80, 25, -40);

    trj_lurus(kL1, L1_x, L1_y, L1_z, 80, 0, -90); // 95
    trj_lurus(kL3, L3_x, L3_y, L3_z, 80, 0, -90); // 100
    trj_lurus(kR2, R2_x, R2_y, R2_z, 80, 0, -90);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 20000);
}
void siapv2()
{
    trj_lurus(kR1, 80, -60, -60, 80, -60, -60);
    trj_lurus(kR2, 80, 0, -60, 80, 0, -60);
    trj_lurus(kR3, 80, 60, -60, 80, 60, -60);

    trj_lurus(kL1, 80, 60, -60, 80, 60, -60);
    trj_lurus(kL2, 80, 0, -60, 80, 0, -60);
    trj_lurus(kL3, 80, -60, -60, 80, -60, -60);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 25000);
}
void siapv3()
{
    trj_lurus(kR1, 80, -10, -80, 80, -10, -80);
    trj_lurus(kR2, 80, 0, -80, 80, 0, -80);
    trj_lurus(kR3, 80, 40, -80, 80, 40, -80);

    trj_lurus(kL1, 80, 10, -80, 80, 10, -80);
    trj_lurus(kL2, 80, 0, -80, 80, 0, -80);
    trj_lurus(kL3, 80, -40, -80, 80, -40, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 25000);
}
void coba_majuv3()
{
    // kanan
    trj_langkah(kL1, L1_x, L1_y, L1_z, 80, -20, -30);
    trj_langkah(kL3, L3_x, L3_y, L3_z, 80, -20, -30);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 80, 15, -30);

    trj_lurus(kR1, R1_x, R1_y, R1_z, 80, 0, -60); // 80
    trj_lurus(kR3, R3_x, R3_y, R3_z, 80, 0, -60); // 80
    trj_lurus(kL2, L2_x, L2_y, L2_z, 80, 0, -60);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 12000);

    trj_langkah(kR1, R1_x, R1_y, R1_z, 80, 20, -30);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 80, 20, -30);
    trj_langkah(kL2, L2_x, L2_y, L2_z, 80, -15, -30);

    trj_lurus(kL1, L1_x, L1_y, L1_z, 80, 0, -60); // 95
    trj_lurus(kL3, L3_x, L3_y, L3_z, 80, 0, -60); // 100
    trj_lurus(kR2, R2_x, R2_y, R2_z, 80, 0, -60);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 12000);
}
void coba_majuv32()
{
    // kanan
    trj_langkah(kL1, L1_x, L1_y, L1_z, 100, -20, -40);
    trj_langkah(kL3, L3_x, L3_y, L3_z, 80, -20, -40);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 80, 10, -40);

    trj_lurus(kR1, R1_x, R1_y, R1_z, 80, 0, -80); // 80
    trj_lurus(kR3, R3_x, R3_y, R3_z, 80, 0, -80); // 80
    trj_lurus(kL2, L2_x, L2_y, L2_z, 80, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 25000);

    trj_langkah(kR1, R1_x, R1_y, R1_z, 100, 20, -40);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 80, 20, -40);
    trj_langkah(kL2, L2_x, L2_y, L2_z, 80, -10, -40);

    trj_lurus(kL1, L1_x, L1_y, L1_z, 80, 0, -80); // 95
    trj_lurus(kL3, L3_x, L3_y, L3_z, 80, 0, -80); // 100
    trj_lurus(kR2, R2_x, R2_y, R2_z, 80, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 25000);
}
void coba_majuv()
{
    // kanan
    trj_langkah(kL1, L1_x, L1_y, L1_z, 80, -20, -40);
    trj_langkah(kL3, L3_x, L3_y, L3_z, 80, -20, -40);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 80, 15, -40);

    trj_lurus(kR1, R1_x, R1_y, R1_z, 80, 0, -80); // 90
    trj_lurus(kR3, R3_x, R3_y, R3_z, 80, 0, -80); // 90
    trj_lurus(kL2, L2_x, L2_y, L2_z, 80, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 18000);

    trj_langkah(kR1, R1_x, R1_y, R1_z, 80, 20, -40);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 80, 20, -40);
    trj_langkah(kL2, L2_x, L2_y, L2_z, 80, -15, -40);

    trj_lurus(kL1, L1_x, L1_y, L1_z, 80, 0, -80); // 95
    trj_lurus(kL3, L3_x, L3_y, L3_z, 80, 0, -80); // 100
    trj_lurus(kR2, R2_x, R2_y, R2_z, 80, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 18000);
}
void coba_majuv33()
{
    // kanan
    trj_langkah(kL1, L1_x, L1_y, L1_z, 90, -20, -40);
    trj_langkah(kL3, L3_x, L3_y, L3_z, 80, -40, -40);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 80, 40, -40);

    trj_lurus(kR1, R1_x, R1_y, R1_z, 90, -20, -90); // 90
    trj_lurus(kR3, R3_x, R3_y, R3_z, 80, 0, -80);   // 90
    trj_lurus(kL2, L2_x, L2_y, L2_z, 80, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 40000);

    trj_langkah(kR1, R1_x, R1_y, R1_z, 90, 10, -40);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 80, 40, -40);
    trj_langkah(kL2, L2_x, L2_y, L2_z, 80, -40, -40);

    trj_lurus(kL1, L1_x, L1_y, L1_z, 90, 20, -90); // 95
    trj_lurus(kL3, L3_x, L3_y, L3_z, 80, 0, -80);  // 100
    trj_lurus(kR2, R2_x, R2_y, R2_z, 80, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 40000);
}
void coba_mundurv3()
{
    // kanan
    trj_langkah(kL1, L1_x, L1_y, L1_z, 80, 30, -30);
    trj_langkah(kL3, L3_x, L3_y, L3_z, 80, 0, -30);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 80, -15, -30);

    trj_lurus(kR1, R1_x, R1_y, R1_z, 80, -10, -60); // 90
    trj_lurus(kR3, R3_x, R3_y, R3_z, 80, 40, -60);  // 90
    trj_lurus(kL2, L2_x, L2_y, L2_z, 80, 0, -60);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 15000);

    trj_langkah(kR1, R1_x, R1_y, R1_z, 80, -30, -30);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 80, 0, -30);
    trj_langkah(kL2, L2_x, L2_y, L2_z, 80, 15, -30);

    trj_lurus(kL1, L1_x, L1_y, L1_z, 80, 10, -60);  // 95
    trj_lurus(kL3, L3_x, L3_y, L3_z, 80, -40, -60); // 100
    trj_lurus(kR2, R2_x, R2_y, R2_z, 80, 0, -60);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 15000);
}
void mundurrv32()
{
    // kanan
    trj_langkah(kL1, L1_x, L1_y, L1_z, 80, 20, -40);
    trj_langkah(kL3, L3_x, L3_y, L3_z, 80, 0, -40);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 80, -5, -40);

    trj_lurus(kR1, R1_x, R1_y, R1_z, 80, -10, -80); // 90
    trj_lurus(kR3, R3_x, R3_y, R3_z, 80, 30, -80);  // 90
    trj_lurus(kL2, L2_x, L2_y, L2_z, 80, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 15000);

    trj_langkah(kR1, R1_x, R1_y, R1_z, 80, -20, -40);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 80, 0, -40);
    trj_langkah(kL2, L2_x, L2_y, L2_z, 80, 5, -40);

    trj_lurus(kL1, L1_x, L1_y, L1_z, 80, 10, -80);  // 95
    trj_lurus(kL3, L3_x, L3_y, L3_z, 80, -30, -80); // 100
    trj_lurus(kR2, R2_x, R2_y, R2_z, 80, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 15000);
}
void coba_mundurv4()
{
    // kanan
    trj_langkah(kL1, L1_x, L1_y, L1_z, 80, 30, -40);
    trj_langkah(kL3, L3_x, L3_y, L3_z, 80, 0, -40);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 80, -15, -40);

    trj_lurus(kR1, R1_x, R1_y, R1_z, 80, -10, -80); // 90
    trj_lurus(kR3, R3_x, R3_y, R3_z, 80, 40, -80);  // 90
    trj_lurus(kL2, L2_x, L2_y, L2_z, 80, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 15000);

    trj_langkah(kR1, R1_x, R1_y, R1_z, 80, -30, -40);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 80, 0, -40);
    trj_langkah(kL2, L2_x, L2_y, L2_z, 80, 15, -40);

    trj_lurus(kL1, L1_x, L1_y, L1_z, 80, 10, -80);  // 95
    trj_lurus(kL3, L3_x, L3_y, L3_z, 80, -40, -80); // 100
    trj_lurus(kR2, R2_x, R2_y, R2_z, 80, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 15000);
}
void coba_putar_kanan_tanggav2()
{
    // kanan
    trj_langkah(kL1, L1_x, L1_y, L1_z, 80, -25, -40);
    trj_langkah(kL3, L3_x, L3_y, L3_z, 80, -25, -40);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 80, -25, -50);

    trj_lurus(kR1, R1_x, R1_y, R1_z, 80, 0, -100); // 90
    trj_lurus(kR3, R3_x, R3_y, R3_z, 80, 0, -100); // 90
    trj_lurus(kL2, L2_x, L2_y, L2_z, 80, 0, -50);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 30000);

    trj_langkah(kR1, R1_x, R1_y, R1_z, 80, -25, -60);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 80, -25, -60);
    trj_langkah(kL2, L2_x, L2_y, L2_z, 80, -25, -30);

    trj_lurus(kL1, L1_x, L1_y, L1_z, 80, 0, -50); // 95
    trj_lurus(kL3, L3_x, L3_y, L3_z, 80, 0, -50); // 100
    trj_lurus(kR2, R2_x, R2_y, R2_z, 80, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 30000);
}
void coba_putar_kiri_tanggav2()
{
    // kanan
    trj_langkah(kL1, L1_x, L1_y, L1_z, 80, 25, -40);
    trj_langkah(kL3, L3_x, L3_y, L3_z, 80, 25, -40);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 80, 25, -50);

    trj_lurus(kR1, R1_x, R1_y, R1_z, 80, 0, -100); // 90
    trj_lurus(kR3, R3_x, R3_y, R3_z, 80, 0, -100); // 90
    trj_lurus(kL2, L2_x, L2_y, L2_z, 80, 0, -50);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 30000);

    trj_langkah(kR1, R1_x, R1_y, R1_z, 80, 25, -60);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 80, 25, -60);
    trj_langkah(kL2, L2_x, L2_y, L2_z, 80, 25, -30);

    trj_lurus(kL1, L1_x, L1_y, L1_z, 80, 0, -50); // 95
    trj_lurus(kL3, L3_x, L3_y, L3_z, 80, 0, -50); // 100
    trj_lurus(kR2, R2_x, R2_y, R2_z, 80, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 30000);
}
void coba_majuv2()
{
    // kanan
    trj_langkah(kL1, L1_x, L1_y, L1_z, 80, 25, -40);
    trj_langkah(kL3, L3_x, L3_y, L3_z, 80, -25, -40);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 80, 15, -40);

    trj_lurus(kR1, R1_x, R1_y, R1_z, 80, -40, -60); // 90
    trj_lurus(kR3, R3_x, R3_y, R3_z, 80, 10, -60);  // 90
    trj_lurus(kL2, L2_x, L2_y, L2_z, 80, 0, -60);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 20000);

    trj_langkah(kR1, R1_x, R1_y, R1_z, 80, -25, -40);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 80, 25, -40);
    trj_langkah(kL2, L2_x, L2_y, L2_z, 80, -15, -40);

    trj_lurus(kL1, L1_x, L1_y, L1_z, 80, 40, -60);  // 95
    trj_lurus(kL3, L3_x, L3_y, L3_z, 80, -10, -60); // 100
    trj_lurus(kR2, R2_x, R2_y, R2_z, 80, 0, -60);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 20000);
}

void coba_maju()
{
    // kanan
    trj_langkah(kL1, L1_x, L1_y, L1_z, 80, -35, -30);
    trj_langkah(kL3, L3_x, L3_y, L3_z, 80, 35, -30);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 120, 0, -30);

    trj_lurus(kR1, R1_x, R1_y, R1_z, 80, 35, -60);  // 90
    trj_lurus(kR3, R3_x, R3_y, R3_z, 80, -35, -60); // 90
    trj_lurus(kL2, L2_x, L2_y, L2_z, 120, 0, -60);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 12000);

    trj_langkah(kR1, R1_x, R1_y, R1_z, 80, -35, -30);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 80, 35, -30);
    trj_langkah(kL2, L2_x, L2_y, L2_z, 70, 0, -30);

    trj_lurus(kL1, L1_x, L1_y, L1_z, 80, 0, -60); // 95
    trj_lurus(kL3, L3_x, L3_y, L3_z, 80, 0, -60); // 100
    trj_lurus(kR2, R2_x, R2_y, R2_z, 70, 0, -60);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 12000);
}
void coba_maju2()
{
    // kanan
    trj_langkah(kL1, L1_x, L1_y, L1_z, 80, -35, -40);
    trj_langkah(kL3, L3_x, L3_y, L3_z, 80, 35, -40);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 120, 0, -40);

    trj_lurus(kR1, R1_x, R1_y, R1_z, 80, 35, -80);  // 90
    trj_lurus(kR3, R3_x, R3_y, R3_z, 80, -35, -80); // 90
    trj_lurus(kL2, L2_x, L2_y, L2_z, 120, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 25000);

    trj_langkah(kR1, R1_x, R1_y, R1_z, 80, -35, -40);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 80, 35, -40);
    trj_langkah(kL2, L2_x, L2_y, L2_z, 70, 0, -40);

    trj_lurus(kL1, L1_x, L1_y, L1_z, 80, 0, -80); // 95
    trj_lurus(kL3, L3_x, L3_y, L3_z, 80, 0, -80); // 100
    trj_lurus(kR2, R2_x, R2_y, R2_z, 70, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 25000);
}
void maju_korban5()
{
    // kanan
    trj_langkah(kL1, L1_x, L1_y, L1_z, 100, -20, -30);
    trj_langkah(kL3, L3_x, L3_y, L3_z, 80, 0, -30);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 80, 0, -30);

    trj_lurus(kR1, R1_x, R1_y, R1_z, 80, 0, -60);  // 60
    trj_lurus(kR3, R3_x, R3_y, R3_z, 80, -20, -60); // 60
    trj_lurus(kL2, L2_x, L2_y, L2_z, 80, 25, -60);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 25000);

    trj_langkah(kR1, R1_x, R1_y, R1_z, 100, 20, -30);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 80, 0, -30);
    trj_langkah(kL2, L2_x, L2_y, L2_z, 80, 0, -30);

    trj_lurus(kL1, L1_x, L1_y, L1_z, 80, 0, -60); // 95
    trj_lurus(kL3, L3_x, L3_y, L3_z, 80, 20, -60); // 100
    trj_lurus(kR2, R2_x, R2_y, R2_z, 80, -25, -60);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 25000);
}
void maju_korban3dan4()
{
    // kanan
    trj_langkah(kL1, L1_x, L1_y, L1_z, 100, -20, -40);
    trj_langkah(kL3, L3_x, L3_y, L3_z, 80, 0, -40);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 80, 0, -40);

    trj_lurus(kR1, R1_x, R1_y, R1_z, 80, 0, -80);  // 80
    trj_lurus(kR3, R3_x, R3_y, R3_z, 80, -20, -80); // 80
    trj_lurus(kL2, L2_x, L2_y, L2_z, 80, 25, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 25000);

    trj_langkah(kR1, R1_x, R1_y, R1_z, 100, 20, -40);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 80, 0, -40);
    trj_langkah(kL2, L2_x, L2_y, L2_z, 80, 0, -40);

    trj_lurus(kL1, L1_x, L1_y, L1_z, 80, 0, -80); // 95
    trj_lurus(kL3, L3_x, L3_y, L3_z, 80, 20, -80); // 100
    trj_lurus(kR2, R2_x, R2_y, R2_z, 80, -25, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 25000);
}
void coba_maju1()
{
    // kanan
    trj_langkah(kL1, L1_x, L1_y, L1_z, 80, 15, -40);
    trj_langkah(kL3, L3_x, L3_y, L3_z, 80, -15, -40);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 70, 0, -40);

    trj_lurus(kR1, R1_x, R1_y, R1_z, 80, 10, -80); // 90
    trj_lurus(kR3, R3_x, R3_y, R3_z, 80, 10, -80); // 90
    trj_lurus(kL2, L2_x, L2_y, L2_z, 70, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 18000);

    trj_langkah(kR1, R1_x, R1_y, R1_z, 80, 20, -40);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 80, -20, -40);
    trj_langkah(kL2, L2_x, L2_y, L2_z, 120, 0, -40);

    trj_lurus(kL1, L1_x, L1_y, L1_z, 80, 0, -80); // 95
    trj_lurus(kL3, L3_x, L3_y, L3_z, 80, 0, -80); // 100
    trj_lurus(kR2, R2_x, R2_y, R2_z, 120, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 18000);
}
void coba_maju3()
{
    // kanan
    trj_langkah(kL1, L1_x, L1_y, L1_z, 80, 15, -40);
    trj_langkah(kL3, L3_x, L3_y, L3_z, 80, -15, -40);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 70, 0, -40);

    trj_lurus(kR1, R1_x, R1_y, R1_z, 80, 10, -80); // 90
    trj_lurus(kR3, R3_x, R3_y, R3_z, 80, 10, -80); // 90
    trj_lurus(kL2, L2_x, L2_y, L2_z, 70, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 20000);

    trj_langkah(kR1, R1_x, R1_y, R1_z, 80, 20, -40);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 80, -20, -40);
    trj_langkah(kL2, L2_x, L2_y, L2_z, 100, 0, -40);

    trj_lurus(kL1, L1_x, L1_y, L1_z, 80, 0, -80); // 95
    trj_lurus(kL3, L3_x, L3_y, L3_z, 80, 0, -80); // 100
    trj_lurus(kR2, R2_x, R2_y, R2_z, 115, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 20000);
    // // kanan
    // trj_langkah(kL1, L1_x, L1_y, L1_z, 80, 15, -40);
    // trj_langkah(kL3, L3_x, L3_y, L3_z, 80, -15, -40);
    // trj_langkah(kR2, R2_x, R2_y, R2_z, 70, 0, -40);

    // trj_lurus(kR1, R1_x, R1_y, R1_z, 80, 10, -80); // 90
    // trj_lurus(kR3, R3_x, R3_y, R3_z, 80, 10, -80); // 90
    // trj_lurus(kL2, L2_x, L2_y, L2_z, 70, 0, -80);
    // trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 20000);

    // trj_langkah(kR1, R1_x, R1_y, R1_z, 80, 20, -40);
    // trj_langkah(kR3, R3_x, R3_y, R3_z, 80, -20, -40);
    // trj_langkah(kL2, L2_x, L2_y, L2_z, 120, 0, -40);

    // trj_lurus(kL1, L1_x, L1_y, L1_z, 80, 0, -80); // 95
    // trj_lurus(kL3, L3_x, L3_y, L3_z, 80, 0, -80); // 100
    // trj_lurus(kR2, R2_x, R2_y, R2_z, 120, 0, -80);
    // trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 20000);
}
void coba_majurintangan()
{
    // kanan
    trj_langkah(kL1, L1_x, L1_y, L1_z, 80, -40, -40);
    trj_langkah(kL3, L3_x, L3_y, L3_z, 80, 40, -40);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 120, 0, -40);

    trj_lurus(kR1, R1_x, R1_y, R1_z, 80, 35, -80);  // 90
    trj_lurus(kR3, R3_x, R3_y, R3_z, 80, -35, -80); // 90
    trj_lurus(kL2, L2_x, L2_y, L2_z, 120, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 20000);

    trj_langkah(kR1, R1_x, R1_y, R1_z, 80, -40, -40);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 80, 40, -40);
    trj_langkah(kL2, L2_x, L2_y, L2_z, 70, 0, -40);

    trj_lurus(kL1, L1_x, L1_y, L1_z, 80, 0, -80); // 95
    trj_lurus(kL3, L3_x, L3_y, L3_z, 80, 0, -80); // 100
    trj_lurus(kR2, R2_x, R2_y, R2_z, 70, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 20000);
}
void coba_majurintangan1()
{
    // kanan
    trj_langkah(kL1, L1_x, L1_y, L1_z, 90, -30, -40);
    trj_langkah(kL3, L3_x, L3_y, L3_z, 80, 30, -40);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 80, 0, -40);

    trj_lurus(kR1, R1_x, R1_y, R1_z, 90, 35, -80);  // 90
    trj_lurus(kR3, R3_x, R3_y, R3_z, 80, -35, -80); // 90
    trj_lurus(kL2, L2_x, L2_y, L2_z, 80, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 20000);

    trj_langkah(kR1, R1_x, R1_y, R1_z, 90, -30, -40);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 80, 30, -40);
    trj_langkah(kL2, L2_x, L2_y, L2_z, 80, 0, -40);

    trj_lurus(kL1, L1_x, L1_y, L1_z, 90, 0, -80); // 95
    trj_lurus(kL3, L3_x, L3_y, L3_z, 80, 0, -80); // 100
    trj_lurus(kR2, R2_x, R2_y, R2_z, 80, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 20000);
}
void coba_mundur()
{
    // kanan
    trj_langkah(kL1, L1_x, L1_y, L1_z, 80, 35, -40);
    trj_langkah(kL3, L3_x, L3_y, L3_z, 80, -35, -40);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 60, 0, -40);

    trj_lurus(kR1, R1_x, R1_y, R1_z, 80, 0, -80); // 90
    trj_lurus(kR3, R3_x, R3_y, R3_z, 80, 0, -80); // 90
    trj_lurus(kL2, L2_x, L2_y, L2_z, 80, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 35000);

    trj_langkah(kR1, R1_x, R1_y, R1_z, 80, 35, -40);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 80, -35, -40);
    trj_langkah(kL2, L2_x, L2_y, L2_z, 120, 0, -40);

    trj_lurus(kL1, L1_x, L1_y, L1_z, 80, 0, -80); // 95
    trj_lurus(kL3, L3_x, L3_y, L3_z, 80, 0, -80); // 100
    trj_lurus(kR2, R2_x, R2_y, R2_z, 80, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 35000);
}

void mundur_robot()
{
    // MUNDUR //belum buat
    trj_langkah(kL1, L1_x, L1_y, L1_z, 40, 10, -60);
    trj_langkah(kL3, L3_x, L3_y, L3_z, 40, 10, -60);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 40, -10, -60);

    trj_lurus(kR1, R1_x, R1_y, R1_z, 40, 0, -95); // 90
    trj_lurus(kR3, R3_x, R3_y, R3_z, 40, 0, -70); // 90
    trj_lurus(kL2, L2_x, L2_y, L2_z, 40, 0, -90);

    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 15000);

    trj_langkah(kR1, R1_x, R1_y, R1_z, 40, -10, -60);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 40, -10, -60);
    trj_langkah(kL2, L2_x, L2_y, L2_z, 40, 10, -60);

    trj_lurus(kL1, L1_x, L1_y, L1_z, 40, 0, -90); // 95
    trj_lurus(kL3, L3_x, L3_y, L3_z, 40, 0, -90); // 100
    trj_lurus(kR2, R2_x, R2_y, R2_z, 40, 0, -90);

    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 15000);
}

void kiri_robot()
{
    // kanan
    trj_langkah(kL1, L1_x, L1_y, L1_z, 30, 0, -60);
    trj_langkah(kL3, L3_x, L3_y, L3_z, 30, 0, -60);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 50, 0, -60);

    trj_lurus(kR1, R1_x, R1_y, R1_z, 40, 0, -80); // 40
    trj_lurus(kR3, R3_x, R3_y, R3_z, 40, 0, -80); // 40
    trj_lurus(kL2, L2_x, L2_y, L2_z, 40, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 15000);

    trj_langkah(kR1, R1_x, R1_y, R1_z, 50, 0, -60);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 50, 0, -60);
    trj_langkah(kL2, L2_x, L2_y, L2_z, 30, 0, -60);

    trj_lurus(kL1, L1_x, L1_y, L1_z, 40, 0, -80); // 95
    trj_lurus(kL3, L3_x, L3_y, L3_z, 40, 0, -80); // 00
    trj_lurus(kR2, R2_x, R2_y, R2_z, 40, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 15000);
}

void kanan_robot()
{
    // kanan
    trj_langkah(kL1, L1_x, L1_y, L1_z, 30, 0, -60);
    trj_langkah(kL3, L3_x, L3_y, L3_z, 30, 0, -60);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 50, 0, -60);

    trj_lurus(kR1, R1_x, R1_y, R1_z, 40, 0, -80); // 40
    trj_lurus(kR3, R3_x, R3_y, R3_z, 40, 0, -80); // 40
    trj_lurus(kL2, L2_x, L2_y, L2_z, 40, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 15000);

    trj_langkah(kR1, R1_x, R1_y, R1_z, 50, 0, -60);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 50, 0, -60);
    trj_langkah(kL2, L2_x, L2_y, L2_z, 30, 0, -60);

    trj_lurus(kL1, L1_x, L1_y, L1_z, 40, 0, -80); // 95
    trj_lurus(kL3, L3_x, L3_y, L3_z, 40, 0, -80); // 00
    trj_lurus(kR2, R2_x, R2_y, R2_z, 40, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 15000);
}

void coba_putar_kanan()
{

    // langkah kaki kiri
    trj_langkah(kL1, L1_x, L1_y, L1_z, 40, -15, -75); // x0,y0,x1,y1,z0,zp
    trj_langkah(kL3, L3_x, L3_y, L3_z, 40, -15, -70);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 40, -15, -70);
    // geser kaki kanan
    trj_lurus(kR1, R1_x, R1_y, R1_z, 40, 0, -95);
    trj_lurus(kR3, R3_x, R3_y, R3_z, 40, 0, -70);
    trj_lurus(kL2, L2_x, L2_y, L2_z, 40, 0, -90);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 15000);
    // langkah kaki kanan
    trj_langkah(kR1, R1_x, R1_y, R1_z, 40, -15, -70);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 40, -15, -50);
    trj_langkah(kL2, L2_x, L2_y, L2_z, 40, -15, -70);
    // geser kaki kanan
    trj_lurus(kL1, L1_x, L1_y, L1_z, 40, 0, -90);
    trj_lurus(kL3, L3_x, L3_y, L3_z, 40, 0, -90);
    trj_lurus(kR2, R2_x, R2_y, R2_z, 40, 0, -90);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 15000);
}
void putar_kanan()
{

    // langkah kaki kiri
    trj_langkah(kL1, L1_x, L1_y, L1_z, -40, 15, -75); // x0,y0,x1,y1,z0,zp
    trj_langkah(kL3, L3_x, L3_y, L3_z, -40, 15, -70);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 40, -15, -70);
    // geser kaki kanan
    trj_lurus(kR1, R1_x, R1_y, R1_z, 40, 0, -95);
    trj_lurus(kR3, R3_x, R3_y, R3_z, 40, 0, -70);
    trj_lurus(kL2, L2_x, L2_y, L2_z, -40, 0, -90);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 15000);
    // langkah kaki kanan
    trj_langkah(kR1, R1_x, R1_y, R1_z, 40, -15, -70);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 40, -15, -50);
    trj_langkah(kL2, L2_x, L2_y, L2_z, -40, 15, -70);
    // geser kaki kanan
    trj_lurus(kL1, L1_x, L1_y, L1_z, -40, 0, -90);
    trj_lurus(kL3, L3_x, L3_y, L3_z, -40, 0, -90);
    trj_lurus(kR2, R2_x, R2_y, R2_z, 40, 0, -90);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 15000);
}
void coba_putar_kiri()
{
    // langkah kaki kiri
    trj_langkah(kL1, L1_x, L1_y, L1_z, 40, 15, -70); // x0,y0,x1,y1,z0,zp
    trj_langkah(kL3, L3_x, L3_y, L3_z, 40, 15, -70);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 40, 15, -70);
    // geser kaki kanan
    trj_lurus(kR1, R1_x, R1_y, R1_z, 40, 0, -95);
    trj_lurus(kR3, R3_x, R3_y, R3_z, 40, 0, -70);
    trj_lurus(kL2, L2_x, L2_y, L2_z, 40, 0, -90);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 15000);
    // langkah kaki kanan
    trj_langkah(kR1, R1_x, R1_y, R1_z, 40, 15, -75);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 40, 15, -50);
    trj_langkah(kL2, L2_x, L2_y, L2_z, 40, 15, -70);
    // geser kaki kanan
    trj_lurus(kL1, L1_x, L1_y, L1_z, 40, 0, -90);
    trj_lurus(kL3, L3_x, L3_y, L3_z, 40, 0, -90);
    trj_lurus(kR2, R2_x, R2_y, R2_z, 40, 0, -90);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 15000);
}
void putar_kiri()
{
    // langkah kaki kiri
    trj_langkah(kL1, L1_x, L1_y, L1_z, -40, -15, -70); // x0,y0,x1,y1,z0,zp
    trj_langkah(kL3, L3_x, L3_y, L3_z, -40, -15, -70);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 40, 15, -70);
    // geser kaki kanan
    trj_lurus(kR1, R1_x, R1_y, R1_z, 40, 0, -95);
    trj_lurus(kR3, R3_x, R3_y, R3_z, 40, 0, -70);
    trj_lurus(kL2, L2_x, L2_y, L2_z, -40, 0, -90);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 15000);
    // langkah kaki kanan
    trj_langkah(kR1, R1_x, R1_y, R1_z, 40, 15, -75);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 40, 15, -50);
    trj_langkah(kL2, L2_x, L2_y, L2_z, -40, -15, -70);
    // geser kaki kanan
    trj_lurus(kL1, L1_x, L1_y, L1_z, -40, 0, -90);
    trj_lurus(kL3, L3_x, L3_y, L3_z, -40, 0, -90);
    trj_lurus(kR2, R2_x, R2_y, R2_z, 40, 0, -90);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 15000);
}
void tanggav1()
{

    // langkah kaki kanan
    trj_langkah(kL1, L1_x, L1_y, L1_z, 95, 30, -10);
    trj_langkah(kL3, L3_x, L3_y, L3_z, 95, -30, -10);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 80, 0, -30); // 10
    // geser kaki kanan
    trj_lurus(kR1, R1_x, R1_y, R1_z, 80, -30, -100);
    trj_lurus(kR3, R3_x, R3_y, R3_z, 80, 30, -100);
    trj_lurus(kL2, L2_x, L2_y, L2_z, 60, 0, -45);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 30000);

    // langkah kaki kiri
    trj_langkah(kR1, R1_x, R1_y, R1_z, 80, 10, -40); // x0,y0,x1,y1,z0,zp
    trj_langkah(kR3, R3_x, R3_y, R3_z, 80, -10, -40);
    trj_langkah(kL2, L2_x, L2_y, L2_z, 100, 0, -10); // 25
    // geser kaki kanan
    trj_lurus(kL1, L1_x, L1_y, L1_z, 70, 30, -45);
    trj_lurus(kL3, L3_x, L3_y, L3_z, 70, -30, -45);
    trj_lurus(kR2, R2_x, R2_y, R2_z, 100, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 30000);
}
void tanggav2()
{

    // langkah kaki kanan
    trj_langkah(kL1, L1_x, L1_y, L1_z, 95, 30, -10);
    trj_langkah(kL3, L3_x, L3_y, L3_z, 95, -30, -10);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 80, 0, -30); // 10
    // geser kaki kanan
    trj_lurus(kR1, R1_x, R1_y, R1_z, 80, -30, -100);
    trj_lurus(kR3, R3_x, R3_y, R3_z, 80, 30, -100);
    trj_lurus(kL2, L2_x, L2_y, L2_z, 60, 0, -50);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 30000);

    // langkah kaki kiri
    trj_langkah(kR1, R1_x, R1_y, R1_z, 80, 10, -40); // x0,y0,x1,y1,z0,zp
    trj_langkah(kR3, R3_x, R3_y, R3_z, 80, -10, -40);
    trj_langkah(kL2, L2_x, L2_y, L2_z, 100, 0, -10); // 25
    // geser kaki kanan
    trj_lurus(kL1, L1_x, L1_y, L1_z, 70, 30, -50);
    trj_lurus(kL3, L3_x, L3_y, L3_z, 70, -30, -50);
    trj_lurus(kR2, R2_x, R2_y, R2_z, 100, 0, -80);
    trj_start(kR1, kR2, kR3, kL1, kL2, kL3, ultra_fast, 30000);
}

void tangga_korban4()
{
    // langkah kaki kiri
    trj_langkah(kL1, L1_x, L1_y, L1_z, -80, 0, -15); // x0,y0,x1,y1,z0,zp
    trj_langkah(kL3, L3_x, L3_y, L3_z, -80, 0, -15);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 15, 0, -25); // 25
    // geser kaki kanan
    trj_lurus(kR1, R1_x, R1_y, R1_z, 80, 0, -105);
    trj_lurus(kR3, R3_x, R3_y, R3_z, 80, 0, -105);
    trj_lurus(kL2, L2_x, L2_y, L2_z, -15, 0, -85);
    trj_start(kL1, kL2, kL3, kR1, kR2, kR3, med, 15);
    // langkah kaki kanan
    trj_langkah(kR1, R1_x, R1_y, R1_z, 25, 0, -35);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 25, 0, -35);
    trj_langkah(kL2, L2_x, L2_y, L2_z, -80, 0, -10); // 10
    // geser kaki kanan
    trj_lurus(kL1, L1_x, L1_y, L1_z, -25, 0, -85);
    trj_lurus(kL3, L3_x, L3_y, L3_z, -25, 0, -85);
    trj_lurus(kR2, R2_x, R2_y, R2_z, 65, 0, -105);
    trj_start(kL1, kL2, kL3, kR1, kR2, kR3, med, 15);
}

void tanggav2_korban4()
{
    // langkah kaki kiri
    trj_langkah(kL1, L1_x, L1_y, L1_z, -25, 0, -15); // x0,y0,x1,y1,z0,zp
    trj_langkah(kL3, L3_x, L3_y, L3_z, -25, 0, -15);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 65, 0, -25); // 25
    // geser kaki kanan
    trj_lurus(kR1, R1_x, R1_y, R1_z, 15, 0, -105);
    trj_lurus(kR3, R3_x, R3_y, R3_z, 15, 0, -105);
    trj_lurus(kL2, L2_x, L2_y, L2_z, -80, 0, -85);
    trj_start(kL1, kL2, kL3, kR1, kR2, kR3, med, 15);
    // langkah kaki kanan
    trj_langkah(kR1, R1_x, R1_y, R1_z, 80, 0, -35);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 80, 0, -35);
    trj_langkah(kL2, L2_x, L2_y, L2_z, -25, 0, -10); // 10
    // geser kaki kanan
    trj_lurus(kL1, L1_x, L1_y, L1_z, -80, 0, -85);
    trj_lurus(kL3, L3_x, L3_y, L3_z, -80, 0, -85);
    trj_lurus(kR2, R2_x, R2_y, R2_z, 25, 0, -105);
    trj_start(kL1, kL2, kL3, kR1, kR2, kR3, med, 15);
}
void imupid_jalanbiasa()
{

    trj_langkah(kL1, L1_x, L1_y, L1_z, -40, L1_y - hasil_PID, -70);
    trj_langkah(kL3, L3_x, L3_y, L3_z, -40, L3_y - hasil_PID, -70);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 40, R2_y + hasil_PID, -70);

    trj_lurus(kR1, R1_x, R1_y, R1_z, 40, 0, -95);  //- hasil_PID //90
    trj_lurus(kR3, R3_x, R3_y, R3_z, 40, 0, -70);  // - hasil_PID //90
    trj_lurus(kL2, L2_x, L2_y, L2_z, -40, 0, -90); //+ hasil_PID
    trj_start(kL1, kL2, kL3, kR1, kR2, kR3, ultra_fast, 20000);

    trj_langkah(kR1, R1_x, R1_y, R1_z, 40, R1_y + hasil_PID, -60);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 40, R3_y + hasil_PID, -70);
    trj_langkah(kL2, L2_x, L2_y, L2_z, -40, L2_y - hasil_PID, -70);

    trj_lurus(kL1, L1_x, L1_y, L1_z, -40, 0, -90); //+ hasil_PID //95
    trj_lurus(kL3, L3_x, L3_y, L3_z, -40, 0, -90); //+ hasil_PID //100
    trj_lurus(kR2, R2_x, R2_y, R2_z, 40, 0, -90);  //- hasil_PID
    trj_start(kL1, kL2, kL3, kR1, kR2, kR3, ultra_fast, 20000);
}

void imupid_jalanrintangan()
{

    trj_langkah(kL1, L1_x, L1_y, L1_z, -40, L1_y - hasil_PID, -40);
    trj_langkah(kL3, L3_x, L3_y, L3_z, -40, L3_y - hasil_PID, -40);
    trj_langkah(kR2, R2_x, R2_y, R2_z, 40, R2_y + hasil_PID, -40);

    trj_lurus(kR1, R1_x, R1_y, R1_z, 40, 0, -100);  //- hasil_PID
    trj_lurus(kR3, R3_x, R3_y, R3_z, 40, 0, -100);  //- hasil_PID
    trj_lurus(kL2, L2_x, L2_y, L2_z, -40, 0, -100); //+ hasil_PID
    trj_start(kL1, kL2, kL3, kR1, kR2, kR3, ultra_fast, 20000);

    trj_langkah(kR1, R1_x, R1_y, R1_z, 40, R1_y + hasil_PID, -40);
    trj_langkah(kR3, R3_x, R3_y, R3_z, 40, R3_y + hasil_PID, -40);
    trj_langkah(kL2, L2_x, L2_y, L2_z, -40, L2_y - hasil_PID, -40);

    trj_lurus(kL1, L1_x, L1_y, L1_z, -40, 0, -100); // + hasil_PID
    trj_lurus(kL3, L3_x, L3_y, L3_z, -40, 0, -110); // + hasil_PID
    trj_lurus(kR2, R2_x, R2_y, R2_z, 40, 0, -100);  //- hasil_PID
    trj_start(kL1, kL2, kL3, kR1, kR2, kR3, ultra_fast, 20000);
}